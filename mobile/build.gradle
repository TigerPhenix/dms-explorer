apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "kotlin-kapt"
apply plugin: "jacoco"
apply plugin: "com.github.ben-manes.versions"

def applicationName = "DmsExplorer"
def versionMajor = 0
def versionMinor = 7
def versionPatch = 55

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "net.mm2d.dmsexplorer"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        archivesBaseName = "${applicationName}-${versionName}"
        resConfigs "en", "ja", "ru", "zh-rCN"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding {
        enabled = true
    }
    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix = ".debug"
            versionNameSuffix = "d"
            testCoverageEnabled true
        }
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    applicationVariants.all { variant ->
        if (variant.buildType.name != "release") {
            return
        }
        variant.outputs.all {
            outputFileName = "${applicationName}-${versionName}.apk"
        }
    }
    lintOptions {
        abortOnError false
    }
    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
}

dependencies {
    implementation "androidx.appcompat:appcompat:1.1.0"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.palette:palette:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation "androidx.preference:preference:1.1.1"
    implementation "androidx.browser:browser:1.2.0"
    implementation "androidx.exifinterface:exifinterface:1.2.0"
    implementation "androidx.core:core-ktx:1.3.1"
    implementation "com.google.android.material:material:1.1.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.8"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.8"
    implementation "net.mm2d:mmupnp:3.1.1"
    implementation "net.mm2d:preference:0.2.3"
    implementation "net.opacapp:multiline-collapsingtoolbar:27.1.1"
    implementation "com.squareup.okhttp3:okhttp:4.8.0"
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.9.0"
    implementation "com.squareup.retrofit2:converter-moshi:2.9.0"
    implementation "com.squareup.moshi:moshi:1.9.3"
    implementation "com.squareup.moshi:moshi-kotlin:1.9.3"
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:1.9.3"
    implementation "io.reactivex.rxjava2:rxjava:2.2.19"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
    implementation "io.reactivex.rxjava2:rxkotlin:2.4.0"

    debugImplementation "com.facebook.stetho:stetho:1.5.1"
    debugImplementation "com.facebook.stetho:stetho-okhttp3:1.5.1"

    testImplementation "junit:junit:4.13"
    testImplementation "io.mockk:mockk:1.10.0"
    testImplementation "com.google.truth:truth:1.0.1"
    testImplementation "org.robolectric:robolectric:4.3.1"
}

jacoco {
    toolVersion = "0.8.5"
}

task jacocoTestReport(
    type: JacocoReport,
    dependsOn: "testDebugUnitTest",
    group: "verification"
) {
    reports {
        xml.enabled = true
        html.enabled = true
    }
    getSourceDirectories().from = "${projectDir}/src/main/java"
    getClassDirectories().from = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug")
    getExecutionData().from = "${buildDir}/jacoco/testDebugUnitTest.exec"
}

dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all { selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'preview', 'b', 'ea', 'eap'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-+]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}
